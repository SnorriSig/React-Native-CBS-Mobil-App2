{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport CategoryGridTile from \"../components/CategoryGridTile\";\nimport { useEffect, useState } from \"react\";\nimport { fetchEventData } from \"../util/eventsApi.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction CategoriesScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      fetchedCategories = _useState2[0],\n      setFetchedCategories = _useState2[1];\n\n  useEffect(function () {\n    function getCategories() {\n      var categories;\n      return _regeneratorRuntime.async(function getCategories$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetchEventData(\"CATEGORIES\"));\n\n            case 2:\n              categories = _context.sent;\n              setFetchedCategories(categories);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getCategories();\n  }, []);\n\n  function renderCategoryItem(itemData) {\n    function pressHandler() {\n      navigation.navigate(\"EventOverview\", {\n        categoryId: itemData.item.id\n      });\n    }\n\n    return _jsx(CategoryGridTile, {\n      title: itemData.item.title,\n      color: itemData.item.color,\n      onPress: pressHandler\n    });\n  }\n\n  return _jsx(FlatList, {\n    data: fetchedCategories,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: renderCategoryItem,\n    numColumns: 2\n  });\n}\n\nexport default CategoriesScreen;","map":{"version":3,"names":["CategoryGridTile","useEffect","useState","fetchEventData","CategoriesScreen","navigation","fetchedCategories","setFetchedCategories","getCategories","categories","renderCategoryItem","itemData","pressHandler","navigate","categoryId","item","id","title","color"],"sources":["C:/Users/snorr/Dropbox/4semester/ReactNative/React-Native-CBS-Mobil-App2/screens/CategoriesScreen.js"],"sourcesContent":["import { FlatList } from \"react-native\";\r\nimport CategoryGridTile from \"../components/CategoryGridTile\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchEventData } from \"../util/eventsApi.js\";\r\n\r\nfunction CategoriesScreen({ navigation }) {\r\nconst [fetchedCategories, setFetchedCategories] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function getCategories() {\r\n      const categories = await fetchEventData(\"CATEGORIES\");\r\n      setFetchedCategories(categories)\r\n  }\r\n\r\n  getCategories();\r\n}, []);\r\n    \r\n  function renderCategoryItem(itemData) {\r\n    function pressHandler() {\r\n      navigation.navigate(\"EventOverview\", {\r\n        categoryId: itemData.item.id,\r\n      });\r\n    }\r\n\r\n    return (\r\n      <CategoryGridTile\r\n        title={itemData.item.title}\r\n        color={itemData.item.color}\r\n        onPress={pressHandler}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <FlatList\r\n      data={fetchedCategories}\r\n      keyExtractor={(item) => item.id}\r\n      renderItem={renderCategoryItem}\r\n      numColumns={2}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CategoriesScreen;\r\n"],"mappings":";;;AACA,OAAOA,gBAAP;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT;;;AAEA,SAASC,gBAAT,OAA0C;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAC1C,gBAAkDH,QAAQ,CAAC,EAAD,CAA1D;EAAA;EAAA,IAAOI,iBAAP;EAAA,IAA0BC,oBAA1B;;EAEEN,SAAS,CAAC,YAAM;IACd,SAAeO,aAAf;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCAC2BL,cAAc,CAAC,YAAD,CADzC;;YAAA;cACQM,UADR;cAEEF,oBAAoB,CAACE,UAAD,CAApB;;YAFF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAKFD,aAAa;EACd,CAPU,EAOR,EAPQ,CAAT;;EASA,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;IACpC,SAASC,YAAT,GAAwB;MACtBP,UAAU,CAACQ,QAAX,CAAoB,eAApB,EAAqC;QACnCC,UAAU,EAAEH,QAAQ,CAACI,IAAT,CAAcC;MADS,CAArC;IAGD;;IAED,OACE,KAAC,gBAAD;MACE,KAAK,EAAEL,QAAQ,CAACI,IAAT,CAAcE,KADvB;MAEE,KAAK,EAAEN,QAAQ,CAACI,IAAT,CAAcG,KAFvB;MAGE,OAAO,EAAEN;IAHX,EADF;EAOD;;EACD,OACE,KAAC,QAAD;IACE,IAAI,EAAEN,iBADR;IAEE,YAAY,EAAE,sBAACS,IAAD;MAAA,OAAUA,IAAI,CAACC,EAAf;IAAA,CAFhB;IAGE,UAAU,EAAEN,kBAHd;IAIE,UAAU,EAAE;EAJd,EADF;AAQD;;AAED,eAAeN,gBAAf"},"metadata":{},"sourceType":"module"}