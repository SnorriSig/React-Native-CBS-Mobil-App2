{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport FlatButton from \"../UI/FlatButton\";\nimport AuthForm from \"./AuthForm\";\nimport { Colors } from \"../../constants/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction AuthContent(_ref) {\n  var isLogin = _ref.isLogin,\n      onAuthenticate = _ref.onAuthenticate;\n  var navigation = useNavigation();\n\n  var _useState = useState({\n    email: false,\n    password: false,\n    confirmEmail: false,\n    confirmPassword: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      credentialsInvalid = _useState2[0],\n      setCredentialsInvalid = _useState2[1];\n\n  function switchAuthModeHandler() {\n    if (isLogin) {\n      navigation.replace(\"Signup\");\n    } else {\n      navigation.replace(\"Login\");\n    }\n  }\n\n  function submitHandler(credentials) {\n    var email = credentials.email,\n        confirmEmail = credentials.confirmEmail,\n        password = credentials.password,\n        confirmPassword = credentials.confirmPassword;\n    email = email.trim();\n    password = password.trim();\n    var emailIsValid = email.includes('@');\n    var passwordIsValid = password.length > 6;\n    var emailsAreEqual = email === confirmEmail;\n    var passwordsAreEqual = password === confirmPassword;\n\n    if (!emailIsValid || !passwordIsValid || !isLogin && (!emailsAreEqual || !passwordsAreEqual)) {\n      Alert.alert('Invalid input', 'Please check your entered credentials.');\n      setCredentialsInvalid({\n        email: !emailIsValid,\n        confirmEmail: !emailIsValid || !emailsAreEqual,\n        password: !passwordIsValid,\n        confirmPassword: !passwordIsValid || !passwordsAreEqual\n      });\n      return;\n    }\n\n    onAuthenticate({\n      email: email,\n      password: password\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.authContent,\n    children: [_jsx(AuthForm, {\n      isLogin: isLogin,\n      onSubmit: submitHandler,\n      credentialsInvalid: credentialsInvalid\n    }), _jsx(View, {\n      style: styles.buttons,\n      children: _jsx(FlatButton, {\n        onPress: switchAuthModeHandler,\n        children: isLogin ? 'Create a new user' : 'Log in instead'\n      })\n    })]\n  });\n}\n\nexport default AuthContent;\nvar styles = StyleSheet.create({\n  authContent: {\n    marginTop: 64,\n    marginHorizontal: 32,\n    padding: 16,\n    borderRadius: 8,\n    backgroundColor: Colors.primary800,\n    elevation: 2,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 1,\n      height: 1\n    },\n    shadowOpacity: 0.35,\n    shadowRadius: 4\n  },\n  buttons: {\n    marginTop: 8\n  }\n});","map":{"version":3,"names":["useState","useNavigation","FlatButton","AuthForm","Colors","AuthContent","isLogin","onAuthenticate","navigation","email","password","confirmEmail","confirmPassword","credentialsInvalid","setCredentialsInvalid","switchAuthModeHandler","replace","submitHandler","credentials","trim","emailIsValid","includes","passwordIsValid","length","emailsAreEqual","passwordsAreEqual","Alert","alert","styles","authContent","buttons","StyleSheet","create","marginTop","marginHorizontal","padding","borderRadius","backgroundColor","primary800","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius"],"sources":["C:/Users/snorr/Dropbox/4semester/ReactNative/React-Native-CBS-Mobil-App2/components/Auth/AuthContent.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { Alert, StyleSheet, View } from 'react-native';\r\nimport { useNavigation } from \"@react-navigation/native\"\r\n\r\nimport FlatButton from '../UI/FlatButton';\r\nimport AuthForm from './AuthForm';\r\nimport { Colors } from '../../constants/styles';\r\n\r\nfunction AuthContent({ isLogin, onAuthenticate }) {\r\n  const navigation = useNavigation();\r\n\r\n  const [credentialsInvalid, setCredentialsInvalid] = useState({\r\n    email: false,\r\n    password: false,\r\n    confirmEmail: false,\r\n    confirmPassword: false,\r\n  });\r\n\r\n  function switchAuthModeHandler() {\r\n    if (isLogin) {\r\n      navigation.replace(\"Signup\");\r\n    } else {\r\n      navigation.replace(\"Login\");\r\n    }\r\n  }\r\n\r\n  function submitHandler(credentials) {\r\n    let { email, confirmEmail, password, confirmPassword } = credentials;\r\n\r\n    email = email.trim();\r\n    password = password.trim();\r\n\r\n    const emailIsValid = email.includes('@');\r\n    const passwordIsValid = password.length > 6;\r\n    const emailsAreEqual = email === confirmEmail;\r\n    const passwordsAreEqual = password === confirmPassword;\r\n\r\n    if (\r\n      !emailIsValid ||\r\n      !passwordIsValid ||\r\n      (!isLogin && (!emailsAreEqual || !passwordsAreEqual))\r\n    ) {\r\n      Alert.alert('Invalid input', 'Please check your entered credentials.');\r\n      setCredentialsInvalid({\r\n        email: !emailIsValid,\r\n        confirmEmail: !emailIsValid || !emailsAreEqual,\r\n        password: !passwordIsValid,\r\n        confirmPassword: !passwordIsValid || !passwordsAreEqual,\r\n      });\r\n      return;\r\n    }\r\n    onAuthenticate({ email, password });\r\n  }\r\n\r\n  return (\r\n    <View style={styles.authContent}>\r\n      <AuthForm\r\n        isLogin={isLogin}\r\n        onSubmit={submitHandler}\r\n        credentialsInvalid={credentialsInvalid}\r\n      />\r\n      <View style={styles.buttons}>\r\n        <FlatButton onPress={switchAuthModeHandler}>\r\n          {isLogin ? 'Create a new user' : 'Log in instead'}\r\n        </FlatButton>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default AuthContent;\r\n\r\nconst styles = StyleSheet.create({\r\n  authContent: {\r\n    marginTop: 64,\r\n    marginHorizontal: 32,\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    backgroundColor: Colors.primary800,\r\n    elevation: 2,\r\n    shadowColor: 'black',\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowOpacity: 0.35,\r\n    shadowRadius: 4,\r\n  },\r\n  buttons: {\r\n    marginTop: 8,\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}