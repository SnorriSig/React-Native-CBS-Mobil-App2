{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/redux/store\";\nimport Navigation from \"./components/Navigation\";\nimport AuthContextProvider, { AuthContext } from \"./store/auth-context\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AppLoading from \"expo-app-loading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Root() {\n  var authCtx = useContext(AuthContext);\n  useEffect(function () {\n    function fetchToken() {\n      var storedToken;\n      return _regeneratorRuntime.async(function fetchToken$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n            case 2:\n              storedToken = _context.sent;\n\n              if (storedToken) {\n                authCtx.authenticate(storedToken);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchToken();\n  }, []);\n  return _jsx(Navigation, {});\n}\n\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"dark\"\n    }), _jsx(AuthContextProvider, {\n      children: _jsx(Provider, {\n        store: store,\n        children: _jsx(Root, {})\n      })\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","useContext","useEffect","useState","Provider","store","Navigation","AuthContextProvider","AuthContext","AsyncStorage","AppLoading","Root","authCtx","fetchToken","getItem","storedToken","authenticate","App"],"sources":["C:/Users/snorr/Dropbox/4semester/ReactNative/React-Native-CBS-Mobil-App2/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/redux/store\";\nimport Navigation from \"./components/Navigation\";\nimport AuthContextProvider, { AuthContext } from \"./store/auth-context\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AppLoading from \"expo-app-loading\";\n\nfunction Root() {\n  //const [isTryingLogin, setIsTryingLogin] = useState(true);\n\n  const authCtx = useContext(AuthContext);\n\n  // Hook provided by react\n  useEffect(() => {\n    async function fetchToken() {\n      const storedToken = await AsyncStorage.getItem(\"token\");\n\n      if (storedToken) {\n        authCtx.authenticate(storedToken);\n      }\n      // setIsTryingLogin(false);\n    }\n\n    fetchToken();\n  }, []);\n\n  // if (isTryingLogin) {\n  //   return <AppLoading />;\n  // }\n\n  return <Navigation />;\n}\n\nexport default function App() {\n  return (\n    <>\n      <StatusBar style=\"dark\" />\n      <AuthContextProvider>\n        <Provider store={store}>\n          <Root />\n        </Provider>\n      </AuthContextProvider>\n    </>\n  );\n}\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT;AACA,OAAOC,UAAP;AACA,OAAOC,mBAAP,IAA8BC,WAA9B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;;;AAEA,SAASC,IAAT,GAAgB;EAGd,IAAMC,OAAO,GAAGX,UAAU,CAACO,WAAD,CAA1B;EAGAN,SAAS,CAAC,YAAM;IACd,SAAeW,UAAf;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCAC4BJ,YAAY,CAACK,OAAb,CAAqB,OAArB,CAD5B;;YAAA;cACQC,WADR;;cAGE,IAAIA,WAAJ,EAAiB;gBACfH,OAAO,CAACI,YAAR,CAAqBD,WAArB;cACD;;YALH;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IASAF,UAAU;EACX,CAXQ,EAWN,EAXM,CAAT;EAiBA,OAAO,KAAC,UAAD,KAAP;AACD;;AAED,eAAe,SAASI,GAAT,GAAe;EAC5B,OACE;IAAA,WACE,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EADF,EAEE,KAAC,mBAAD;MAAA,UACE,KAAC,QAAD;QAAU,KAAK,EAAEZ,KAAjB;QAAA,UACE,KAAC,IAAD;MADF;IADF,EAFF;EAAA,EADF;AAUD"},"metadata":{},"sourceType":"module"}