{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport EventsOverviewScreen from \"../screens/EventsOverviewScreen\";\nimport CategoriesScreen from \"../screens/CategoriesScreen\";\nimport EventDetailScreen from \"../screens/EventDetailScreen\";\nimport FavoritesScreen from \"../screens/FavoritesScreen\";\nimport LoginScreen from \"../screens/authScreens/LoginScreen\";\nimport SignupScreen from \"../screens/authScreens/SignupScreen\";\nimport { Colors } from \"../constants/styles\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../store/auth-context\";\nimport IconButton from \"./UI/IconButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\n\nfunction AuthStack() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.primary500\n      },\n      headerTitleStyle: {\n        color: Colors.primary800\n      },\n      contentStyle: {\n        backgroundColor: Colors.primary100\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: SignupScreen\n    })]\n  });\n}\n\nfunction AuthenticatedStack() {\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"Drawer\",\n      component: DrawerNavigator\n    })\n  });\n}\n\nfunction DrawerNavigator() {\n  var authCtx = useContext(AuthContext);\n  return _jsxs(Drawer.Navigator, {\n    screenOptions: {\n      headerTintColor: \"#4967AA\",\n      sceneContainerStyle: {\n        backgroundColor: Colors.primary100\n      },\n      drawerContentStyle: {\n        backgroundColor: Colors.primary100\n      },\n      drawerActiveTintColor: \"#f7f7f3\",\n      drawerActiveBackgroundColor: \"#4967AA\",\n      drawerInactiveTintColor: \"#4967AA\"\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Categories\",\n      component: CategoriesScreen,\n      options: {\n        title: \"All categories\",\n        drawerIcon: function drawerIcon(_ref) {\n          var color = _ref.color,\n              size = _ref.size;\n          return _jsx(Ionicons, {\n            name: \"list\",\n            color: color,\n            size: size\n          });\n        },\n        headerRight: function headerRight(_ref2) {\n          var tintColor = _ref2.tintColor;\n          return _jsx(IconButton, {\n            icon: \"exit\",\n            color: tintColor,\n            size: 24,\n            onPress: authCtx.logout\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Favorites\",\n      component: FavoritesScreen,\n      options: {\n        title: \"Favorites\",\n        drawerIcon: function drawerIcon(_ref3) {\n          var color = _ref3.color,\n              size = _ref3.size;\n          return _jsx(Ionicons, {\n            name: \"star\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    })]\n  });\n}\n\nexport default function Navigation() {\n  var authCtx = useContext(AuthContext);\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"dark\"\n    }), _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          title: \"Event details\",\n          headerStyle: {\n            backgroundColor: Colors.primary500\n          },\n          headerTintColor: \"#4967AA\",\n          contentStyle: {\n            backgroundColor: Colors.primary100\n          }\n        },\n        children: [!authCtx.isAuthenticated && _jsx(Stack.Screen, {\n          name: \"Authenticate\",\n          component: AuthStack,\n          options: {\n            headerShown: false\n          }\n        }), authCtx.isAuthenticated && _jsx(Stack.Screen, {\n          name: \"Authendicated\",\n          component: AuthenticatedStack,\n          options: {\n            headerShown: false\n          }\n        }), authCtx.isAuthenticated && _jsx(Stack.Screen, {\n          name: \"Drawer\",\n          component: DrawerNavigator\n        }), authCtx.isAuthenticated && _jsx(Stack.Screen, {\n          name: \"EventOverview\",\n          component: EventsOverviewScreen\n        }), authCtx.isAuthenticated && _jsx(Stack.Screen, {\n          name: \"EventDetail\",\n          component: EventDetailScreen\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","NavigationContainer","createNativeStackNavigator","createDrawerNavigator","Ionicons","EventsOverviewScreen","CategoriesScreen","EventDetailScreen","FavoritesScreen","LoginScreen","SignupScreen","Colors","useContext","AuthContext","IconButton","Stack","Drawer","AuthStack","headerStyle","backgroundColor","primary500","headerTitleStyle","color","primary800","contentStyle","primary100","AuthenticatedStack","headerShown","DrawerNavigator","authCtx","headerTintColor","sceneContainerStyle","drawerContentStyle","drawerActiveTintColor","drawerActiveBackgroundColor","drawerInactiveTintColor","title","drawerIcon","size","headerRight","tintColor","logout","Navigation","isAuthenticated"],"sources":["C:/Users/snorr/Dropbox/4semester/ReactNative/React-Native-CBS-Mobil-App2/components/Navigation.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nimport EventsOverviewScreen from \"../screens/EventsOverviewScreen\";\r\nimport CategoriesScreen from \"../screens/CategoriesScreen\";\r\nimport EventDetailScreen from \"../screens/EventDetailScreen\";\r\nimport FavoritesScreen from \"../screens/FavoritesScreen\";\r\n\r\nimport LoginScreen from \"../screens/authScreens/LoginScreen\";\r\nimport SignupScreen from \"../screens/authScreens/SignupScreen\";\r\nimport { Colors } from \"../constants/styles\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../store/auth-context\";\r\nimport IconButton from \"./UI/IconButton\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\nfunction AuthStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerStyle: { backgroundColor: Colors.primary500 },\r\n        headerTitleStyle: { color: Colors.primary800 },\r\n        contentStyle: { backgroundColor: Colors.primary100 },\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n      <Stack.Screen name=\"Signup\" component={SignupScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction AuthenticatedStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Drawer\" component={DrawerNavigator} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction DrawerNavigator() {\r\n  const authCtx = useContext(AuthContext);\r\n  return (\r\n    <Drawer.Navigator\r\n      // name=\"Favorites\" component={FavoritesScreen}\r\n      screenOptions={{\r\n        // title: \"Favorites\",\r\n        // headerStyle: { backgroundColor: Colors.primary500 },\r\n        headerTintColor: \"#4967AA\",\r\n        sceneContainerStyle: { backgroundColor: Colors.primary100 },\r\n        // drawerIcon: ({ color, size }) => (\r\n        //   <Ionicons name=\"star\" color={color} size={size} />\r\n        // ),\r\n        drawerContentStyle: { backgroundColor: Colors.primary100 },\r\n        drawerActiveTintColor: \"#f7f7f3\",\r\n        drawerActiveBackgroundColor: \"#4967AA\",\r\n        drawerInactiveTintColor: \"#4967AA\",\r\n      }}\r\n    >\r\n      <Drawer.Screen\r\n        name=\"Categories\"\r\n        component={CategoriesScreen}\r\n        options={{\r\n          title: \"All categories\",\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"list\" color={color} size={size} />\r\n          ),\r\n          headerRight: ({ tintColor }) => (\r\n            <IconButton\r\n              icon=\"exit\"\r\n              color={tintColor}\r\n              size={24}\r\n              onPress={authCtx.logout}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Favorites\"\r\n        component={FavoritesScreen}\r\n        options={{\r\n          title: \"Favorites\",\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"star\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nexport default function Navigation() {\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  return (\r\n    <>\r\n      <StatusBar style=\"dark\" />\r\n      <NavigationContainer>\r\n        <Stack.Navigator\r\n          screenOptions={{\r\n            title: \"Event details\",\r\n            headerStyle: { backgroundColor: Colors.primary500 },\r\n            headerTintColor: \"#4967AA\",\r\n            contentStyle: { backgroundColor: Colors.primary100 },\r\n          }}\r\n        >\r\n          {!authCtx.isAuthenticated && (\r\n            <Stack.Screen\r\n              name=\"Authenticate\"\r\n              component={AuthStack}\r\n              options={{\r\n                headerShown: false,\r\n              }}\r\n            />\r\n          )}\r\n          {authCtx.isAuthenticated && (\r\n            <Stack.Screen\r\n              name=\"Authendicated\"\r\n              component={AuthenticatedStack}\r\n              options={{\r\n                headerShown: false,\r\n              }}\r\n            />\r\n          )}\r\n          {authCtx.isAuthenticated && (\r\n            <Stack.Screen name=\"Drawer\" component={DrawerNavigator} />\r\n          )}\r\n          {authCtx.isAuthenticated && (\r\n            <Stack.Screen\r\n              name=\"EventOverview\"\r\n              component={EventsOverviewScreen}\r\n            />\r\n          )}\r\n          {authCtx.isAuthenticated && (\r\n            <Stack.Screen name=\"EventDetail\" component={EventDetailScreen} />\r\n          )}\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}