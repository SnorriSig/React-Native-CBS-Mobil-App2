{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useLayoutEffect, useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport EventList from \"../components/EventList/EventList\";\nimport { EVENTS } from \"../data/dummy-data\";\nimport { fetchEventData } from \"../util/eventsApi.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction EventOverviewScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      fetchedCategories = _useState2[0],\n      setFetchedCategories = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fetchedEvents = _useState4[0],\n      setFetchedEvents = _useState4[1];\n\n  useEffect(function () {\n    function getCategories() {\n      var categories;\n      return _regeneratorRuntime.async(function getCategories$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetchEventData(\"CATEGORIES\"));\n\n            case 2:\n              categories = _context.sent;\n              setFetchedCategories(categories);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getCategories();\n  }, []);\n  useEffect(function () {\n    function getEvents() {\n      var events;\n      return _regeneratorRuntime.async(function getEvents$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetchEventData(\"EVENTS\"));\n\n            case 2:\n              events = _context2.sent;\n              setFetchedEvents(events);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getEvents();\n  }, []);\n  var catId = route.params.categoryId;\n  var displayedEvents = fetchedEvents.filter(function (eventItem) {\n    return eventItem.categoryIds.indexOf(catId) >= 0;\n  });\n  useLayoutEffect(function () {\n    var categoryTitle = fetchedCategories.find(function (category) {\n      return category.id === id;\n    });\n    navigation.setOptions({\n      title: categoryTitle\n    });\n  }, [catId, navigation]);\n  return _jsx(EventList, {\n    items: displayedEvents\n  });\n}\n\nexport default EventOverviewScreen;","map":{"version":3,"names":["useLayoutEffect","useState","useEffect","useSelector","useDispatch","EventList","EVENTS","fetchEventData","EventOverviewScreen","route","navigation","fetchedCategories","setFetchedCategories","fetchedEvents","setFetchedEvents","getCategories","categories","getEvents","events","catId","params","categoryId","displayedEvents","filter","eventItem","categoryIds","indexOf","categoryTitle","find","category","id","setOptions","title"],"sources":["C:/Users/snorr/Dropbox/4semester/ReactNative/React-Native-CBS-Mobil-App2/screens/EventsOverviewScreen.js"],"sourcesContent":["import { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport EventList from \"../components/EventList/EventList\";\r\nimport { EVENTS } from \"../data/dummy-data\";\r\nimport { fetchEventData } from \"../util/eventsApi.js\";\r\n\r\nfunction EventOverviewScreen({ route, navigation }) {\r\n\r\n  // const dispatch = useDispatch();\r\n  // const events = useSelector((state) => state.loadEvents.events);\r\n\r\n  const [fetchedCategories, setFetchedCategories] = useState([]);\r\n  const [fetchedEvents, setFetchedEvents] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    async function getCategories() {\r\n      const categories = await fetchEventData(\"CATEGORIES\");\r\n      setFetchedCategories(categories);\r\n    }\r\n    getCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getEvents() {\r\n      const events = await fetchEventData(\"EVENTS\");\r\n      setFetchedEvents(events);\r\n\r\n\r\n      // const addEventsToStore = useSelector((state) => state.loadEvents.events)\r\n      // dispatch(addEvents({ events }));\r\n      // console.log(events);\r\n    }\r\n    getEvents();\r\n  }, []);\r\n\r\n\r\n  \r\n\r\n  \r\n  const catId = route.params.categoryId;\r\n\r\n  const displayedEvents = fetchedEvents.filter((eventItem) => {\r\n    return eventItem.categoryIds.indexOf(catId) >= 0;\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    const categoryTitle = fetchedCategories.find(\r\n      (category) => category.id === id\r\n    )\r\n\r\n    // sets the options for the screen here - insted of in navigation => title for header\r\n    navigation.setOptions({\r\n      title: categoryTitle,\r\n    });\r\n  }, [catId, navigation]);\r\n\r\n  return <EventList items={displayedEvents} />;\r\n}\r\n\r\nexport default EventOverviewScreen;\r\n"],"mappings":";;AAAA,SAASA,eAAT,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP;AACA,SAASC,MAAT;AACA,SAASC,cAAT;;;AAEA,SAASC,mBAAT,OAAoD;EAAA,IAArBC,KAAqB,QAArBA,KAAqB;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAKlD,gBAAkDT,QAAQ,CAAC,EAAD,CAA1D;EAAA;EAAA,IAAOU,iBAAP;EAAA,IAA0BC,oBAA1B;;EACA,iBAA0CX,QAAQ,CAAC,EAAD,CAAlD;EAAA;EAAA,IAAOY,aAAP;EAAA,IAAsBC,gBAAtB;;EAIAZ,SAAS,CAAC,YAAM;IACd,SAAea,aAAf;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCAC2BR,cAAc,CAAC,YAAD,CADzC;;YAAA;cACQS,UADR;cAEEJ,oBAAoB,CAACI,UAAD,CAApB;;YAFF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAIAD,aAAa;EACd,CANQ,EAMN,EANM,CAAT;EAQAb,SAAS,CAAC,YAAM;IACd,SAAee,SAAf;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACuBV,cAAc,CAAC,QAAD,CADrC;;YAAA;cACQW,MADR;cAEEJ,gBAAgB,CAACI,MAAD,CAAhB;;YAFF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IASAD,SAAS;EACV,CAXQ,EAWN,EAXM,CAAT;EAiBA,IAAME,KAAK,GAAGV,KAAK,CAACW,MAAN,CAAaC,UAA3B;EAEA,IAAMC,eAAe,GAAGT,aAAa,CAACU,MAAd,CAAqB,UAACC,SAAD,EAAe;IAC1D,OAAOA,SAAS,CAACC,WAAV,CAAsBC,OAAtB,CAA8BP,KAA9B,KAAwC,CAA/C;EACD,CAFuB,CAAxB;EAIAnB,eAAe,CAAC,YAAM;IACpB,IAAM2B,aAAa,GAAGhB,iBAAiB,CAACiB,IAAlB,CACpB,UAACC,QAAD;MAAA,OAAcA,QAAQ,CAACC,EAAT,KAAgBA,EAA9B;IAAA,CADoB,CAAtB;IAKApB,UAAU,CAACqB,UAAX,CAAsB;MACpBC,KAAK,EAAEL;IADa,CAAtB;EAGD,CATc,EASZ,CAACR,KAAD,EAAQT,UAAR,CATY,CAAf;EAWA,OAAO,KAAC,SAAD;IAAW,KAAK,EAAEY;EAAlB,EAAP;AACD;;AAED,eAAed,mBAAf"},"metadata":{},"sourceType":"module"}