{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { db } from \"./firestore.js\";\n\nfunction authendicate(mode, email, password) {\n  var url, response, token;\n  return _regeneratorRuntime.async(function authendicate$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"https://identitytoolkit.googleapis.com/v1/accounts:\" + mode + \"?key=\" + \"AIzaSyAf-2sfqW3ZIUlDWWHXgo8JwAj9f6wa1Zo\";\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url, {\n            email: email,\n            password: password,\n            returnSecureToken: true\n          }));\n\n        case 3:\n          response = _context.sent;\n          token = response.data.idToken;\n          return _context.abrupt(\"return\", token);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function createUser(email, password) {\n  var docRef;\n  return _regeneratorRuntime.async(function createUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, \"users\"), {\n            email: email,\n            password: password\n          }));\n\n        case 3:\n          docRef = _context2.sent;\n          console.log(\"Document written with ID: \", docRef.id);\n          _context2.next = 10;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(\"Error adding document: \", _context2.t0);\n\n        case 10:\n          return _context2.abrupt(\"return\", authendicate(\"signUp\", email, password));\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\nexport function login(email, password) {\n  var docRef;\n  return _regeneratorRuntime.async(function login$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, \"logging\"), {\n            email: email,\n            date: new Date()\n          }));\n\n        case 3:\n          docRef = _context3.sent;\n          console.log(\"Document written with ID: \", docRef.id);\n          _context3.next = 10;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(\"Error adding document: \", _context3.t0);\n\n        case 10:\n          return _context3.abrupt(\"return\", authendicate(\"signInWithPassword\", email, password));\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}","map":{"version":3,"names":["axios","collection","addDoc","db","authendicate","mode","email","password","url","post","returnSecureToken","response","token","data","idToken","createUser","docRef","console","log","id","error","login","date","Date"],"sources":["C:/Users/snorr/Dropbox/4semester/ReactNative/React-Native-CBS-Mobil-App2/util/auth.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_KEY } from \"@env\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { db } from \"./firestore.js\";\r\n\r\nasync function authendicate(mode, email, password) {\r\n  const url = `https://identitytoolkit.googleapis.com/v1/accounts:${mode}?key=${API_KEY}`;\r\n\r\n  const response = await axios.post(url, {\r\n    email: email,\r\n    password: password,\r\n    returnSecureToken: true,\r\n  });\r\n\r\n  const token = response.data.idToken;\r\n\r\n  return token;\r\n}\r\n\r\nexport async function createUser(email, password) {\r\n  try {\r\n    const docRef = await addDoc(collection(db, \"users\"), {\r\n      email: email,\r\n      password: password,\r\n    });\r\n    console.log(\"Document written with ID: \", docRef.id);\r\n  } catch (e) {\r\n    console.error(\"Error adding document: \", e);\r\n  }\r\n\r\n  return authendicate(\"signUp\", email, password);\r\n}\r\n\r\nexport async function login(email, password) {\r\n  try {\r\n    const docRef = await addDoc(collection(db, \"logging\"), {\r\n      email: email,\r\n      date: new Date(),\r\n    });\r\n    console.log(\"Document written with ID: \", docRef.id);\r\n  } catch (e) {\r\n    console.error(\"Error adding document: \", e);\r\n  }\r\n  return authendicate(\"signInWithPassword\", email, password);\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,oBAAnC;AACA,SAASC,EAAT;;AAEA,SAAeC,YAAf,CAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,QAAzC;EAAA;EAAA;IAAA;MAAA;QAAA;UACQC,GADR,2DACoEH,IADpE;UAAA;UAAA,iCAGyBL,KAAK,CAACS,IAAN,CAAWD,GAAX,EAAgB;YACrCF,KAAK,EAAEA,KAD8B;YAErCC,QAAQ,EAAEA,QAF2B;YAGrCG,iBAAiB,EAAE;UAHkB,CAAhB,CAHzB;;QAAA;UAGQC,QAHR;UASQC,KATR,GASgBD,QAAQ,CAACE,IAAT,CAAcC,OAT9B;UAAA,iCAWSF,KAXT;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAcA,OAAO,SAAeG,UAAf,CAA0BT,KAA1B,EAAiCC,QAAjC;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAEkBL,MAAM,CAACD,UAAU,CAACE,EAAD,EAAK,OAAL,CAAX,EAA0B;YACnDG,KAAK,EAAEA,KAD4C;YAEnDC,QAAQ,EAAEA;UAFyC,CAA1B,CAFxB;;QAAA;UAEGS,MAFH;UAMHC,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,MAAM,CAACG,EAAjD;UANG;UAAA;;QAAA;UAAA;UAAA;UAQHF,OAAO,CAACG,KAAR,CAAc,yBAAd;;QARG;UAAA,kCAWEhB,YAAY,CAAC,QAAD,EAAWE,KAAX,EAAkBC,QAAlB,CAXd;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAcP,OAAO,SAAec,KAAf,CAAqBf,KAArB,EAA4BC,QAA5B;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAEkBL,MAAM,CAACD,UAAU,CAACE,EAAD,EAAK,SAAL,CAAX,EAA4B;YACrDG,KAAK,EAAEA,KAD8C;YAErDgB,IAAI,EAAE,IAAIC,IAAJ;UAF+C,CAA5B,CAFxB;;QAAA;UAEGP,MAFH;UAMHC,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,MAAM,CAACG,EAAjD;UANG;UAAA;;QAAA;UAAA;UAAA;UAQHF,OAAO,CAACG,KAAR,CAAc,yBAAd;;QARG;UAAA,kCAUEhB,YAAY,CAAC,oBAAD,EAAuBE,KAAvB,EAA8BC,QAA9B,CAVd;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}